using System;
using System.Collections.Generic;


namespace Pluton.SystemProgram.Devices
{
    ///--------------------------------------------------------------------------------------
    using StoreKit;
    ///--------------------------------------------------------------------------------------
















    ///=====================================================================================
    ///
    /// <summary>
    /// Система обслуживание магазина
    /// </summary>
    /// 
    ///--------------------------------------------------------------------------------------
    public class AMarketplace
    {
        ///--------------------------------------------------------------------------------------
        private readonly AAPI_products mProducts = null;
        private readonly AAPI_payments mPayments = null;

        private readonly List<string> mProductID = new List<string>();

        private int mPurchase = 0; //количество покупок

        private EState mState = EState.none; //текущее состояние магазина

        ///--------------------------------------------------------------------------------------
        private enum EState
        {
            none,       //неинцеализирован
            loading,    //идет загрузка цен
            completed   //загрузка завершена
        }
        ///--------------------------------------------------------------------------------------










        ///=====================================================================================
        ///
        /// <summary>
        /// Constructor
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        public AMarketplace()
        {
            mProducts = new AAPI_products();
            mProducts.signal_completed += slot_productsCompleted;
            mProducts.signal_failed += slot_productsFailed;

            mPayments = new AAPI_payments();
        }
        ///--------------------------------------------------------------------------------------







         ///=====================================================================================
        ///
        /// <summary>
        /// инцилизация списка продуктов
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        public void initProducts(List<string> products)
        {
            mProductID.AddRange(products);
        }
        ///--------------------------------------------------------------------------------------





         ///=====================================================================================
        ///
        /// <summary>
        /// Доступность магазина
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        public bool isEnabled()
        {
            return SKPaymentQueue.CanMakePayments;
        }
        ///--------------------------------------------------------------------------------------





        ///=====================================================================================
        ///
        /// <summary>
        /// загрузка цены и описание товаров
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        private void updateStore()
        {
            switch (mState)
            {
                //магазин не инцеализирован, загрузим цены
                case EState.none:
                    {
                        mProducts.loadStore(mProductID);
                        mState = EState.loading;
                        break;
                    }
            }
        }
        ///--------------------------------------------------------------------------------------




         ///=====================================================================================
        ///
        /// <summary>
        /// загрузка цены прошла успешно
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        private void slot_productsCompleted ()
        {
            mState = EState.completed;
        }
        ///--------------------------------------------------------------------------------------





         ///=====================================================================================
        ///
        /// <summary>
        /// ошибка при загрузке цены
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        private void slot_productsFailed()
        {
            mState = EState.none;
        }
        ///--------------------------------------------------------------------------------------





        ///=====================================================================================
        ///
        /// <summary>
        /// проверка, были сделаны когданибудь покупки или нет
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        public bool isPurchase()
        {
            return mPurchase > 0 ? true : false;
        }
        ///--------------------------------------------------------------------------------------






         ///=====================================================================================
        ///
        /// <summary>
        /// проверка, продукт куплен или нет
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        public bool isProductBuy(string productID)
        {
            return mPayments.isProductBuy(productID);
        }
        ///--------------------------------------------------------------------------------------








         ///=====================================================================================
        ///
        /// <summary>
        /// процесс завершения покупки
        /// и отослание магазину что все ок, продукт обратоался
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        public bool productCompleted(string productID)
        {
            return mPayments.productCompleted(productID);
        }
        ///--------------------------------------------------------------------------------------










         ///=====================================================================================
        ///
        /// <summary>
        /// возвратим описание покупки
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        public string getDescription(string productID)
        {
            updateStore();
            return mProducts.getDescription(productID);
        }
        ///--------------------------------------------------------------------------------------







         ///=====================================================================================
        ///
        /// <summary>
        /// возвратим название покупки
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        public string getName(string productID)
        {
            updateStore();
            return mProducts.getTitle(productID);
        }
        ///--------------------------------------------------------------------------------------






         ///=====================================================================================
        ///
        /// <summary>
        /// возвратим цену покупки
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        public string getFormattedPrice(string productID)
        {
            updateStore();
            return mProducts.getPrice(productID);
        }
        ///--------------------------------------------------------------------------------------






         ///=====================================================================================
        ///
        /// <summary>
        /// совершение опкупки
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        public bool productBuy(string productID)
        {
            return mPayments.productBuy(productID);
        }
        ///--------------------------------------------------------------------------------------









         ///=====================================================================================
        ///
        /// <summary>
        /// проверка, есть ошибка или нет
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        public bool isLastError(string productID)
        {
            return mProducts.isLastError(productID) || mPayments.isLastError(productID);
        }
        ///--------------------------------------------------------------------------------------




         ///=====================================================================================
        ///
        /// <summary>
        /// возвратим последнию ошибку
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        public string getLastError(string productID)
        {
            string error1 = mProducts.getLastError(productID);
            string error2 = mPayments.getLastError(productID);

            if (error1 == null && error2 == null)
            {
                return null;
            }

            if (error1 == null && error2 != null)
            {
                return error2;
            }

            if (error1 != null && error2 == null)
            {
                return error1;
            }

            return error1 + '\n' + error2;
        }
        ///--------------------------------------------------------------------------------------










         ///=====================================================================================
        ///
        /// <summary>
        /// Загрузка настроек
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        public void loadSettings(AStorage settings)
        {
            mPurchase = settings.readInteger("purchase", mPurchase);
        }
        ///--------------------------------------------------------------------------------------






         ///=====================================================================================
        ///
        /// <summary>
        /// Сохранение настроек
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        public void saveSettings(AStorage settings)
        {
            settings.writeInteger("purchase", mPurchase);
        }
        ///--------------------------------------------------------------------------------------


    }
}





using System;
using Microsoft.Xna.Framework;
using Microsoft.Xna.Framework.Content;
using Microsoft.Xna.Framework.Graphics;


using Pluton.SystemProgram;


namespace Pluton.GraphicsElement
{
    ///--------------------------------------------------------------------------------------







     ///=====================================================================================
    ///
    /// <summary>
    /// Энимационный элемент
    /// проигрывает одну анимацию - туда от 0 до 1
    /// по синусоиде
    /// 
    /// </summary>
    /// 
    ///--------------------------------------------------------------------------------------
    public class AAnimationOnceSinFade
    {
        ///--------------------------------------------------------------------------------------
        private const double    cLength = Math.PI;

        private readonly double mCountAmplitude = 0; //количесество скачков
        private double          mSpeed  = 0;    //скорость перемещения
        private double          mDiff   = 0;    //текущее изменение от 0 до 1;
        private ETypeState      mState  = ETypeState.stop;
        ///--------------------------------------------------------------------------------------




        ///--------------------------------------------------------------------------------------
        /// <summary>
        /// Текущее деййствия состояние машины
        /// </summary>
        protected enum ETypeState
        {
            stop,

            /// <summary>
            /// анимируем в одну сторону
            /// </summary>
            forward
        }
        ///--------------------------------------------------------------------------------------






        ///=====================================================================================
        ///
        /// <summary>
        /// Constructor
        /// speed - скорость продолжительности анимации в милисикундах
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        public AAnimationOnceSinFade(float speed, float countAmplitude)
        {
            mSpeed = cLength / speed;
            mCountAmplitude = countAmplitude;
        }
        ///--------------------------------------------------------------------------------------







        ///=====================================================================================
        ///
        /// <summary>
        /// возвратить  текущее значение анимации от 0..1
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        public static implicit operator float(AAnimationOnceSinFade p)
        {
            double db = Math.Sin(p.mDiff);
            return (float)(Math.Sin(p.mDiff * p.mCountAmplitude) * db);
        }
        ///--------------------------------------------------------------------------------------










        ///=====================================================================================
        ///
        /// <summary>
        /// обработка анимации
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        public void update(TimeSpan gameTime)
        {
            switch (mState)
            {
                case ETypeState.forward:
                    {
                        mDiff += mSpeed * gameTime.TotalMilliseconds;
                        if (mDiff > cLength)
                        {
                            mDiff = 0.0f;
                            mState = ETypeState.stop;
                        }
                        break;
                    }
            }
        }
        ///--------------------------------------------------------------------------------------






         ///=====================================================================================
        ///
        /// <summary>
        /// начало старт анимации
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        public void startOnce()
        {
            mState = ETypeState.forward;
        }
        ///--------------------------------------------------------------------------------------





         ///=====================================================================================
        ///
        /// <summary>
        /// начало старт анимации
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        public void startOnce(float speed)
        {
            mState = ETypeState.forward;
            mSpeed = cLength / speed;
        }
        ///--------------------------------------------------------------------------------------






        ///=====================================================================================
        ///
        /// <summary>
        /// начало старт анимации
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        public void reset()
        {
            mDiff = 0;
            mState = ETypeState.stop;
        }
        ///--------------------------------------------------------------------------------------




        ///=====================================================================================
        ///
        /// <summary>
        /// проверка, анимация остановилась илил нет
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        public bool isStop()
        {
            return mState == ETypeState.stop ? true : false;
        }






    }//AAnimationLoopOnce
}
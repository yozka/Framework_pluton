#region Using framework
using System;
using Microsoft.Xna.Framework;
using Microsoft.Xna.Framework.Content;
using Microsoft.Xna.Framework.Graphics;
#endregion



namespace Pluton.SystemProgram
{
    ///--------------------------------------------------------------------------------------







     ///=====================================================================================
    ///
    /// <summary>
    /// Система управление потоком из объектов
    /// 
    /// </summary>
    /// 
    ///--------------------------------------------------------------------------------------
    public class IMemberData
    {
        ///--------------------------------------------------------------------------------------







         ///=====================================================================================
        ///
        /// <summary>
        /// Сохранение данных
        /// Если на входе не пустой поток, то создадим свой, новый поток
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        public bool saveData(IStream stream)
        {
            if (stream == null)
            {
                return false;
            }

            IStream nodeStream = stream;
            if (!stream.isEmpty())
            {
                nodeStream = stream.creationChild();
            }
            nodeStream.creation(this);
            return onSaveData(nodeStream);
        }
        ///--------------------------------------------------------------------------------------










         ///=====================================================================================
        ///
        /// <summary>
        /// Востановление данных
        /// если текущие данные по типу несовпадают
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        public bool restoreData(IStream stream)
        {
            if (stream == null)
            {
                return false;
            }
            IStream nodeStream = stream;
            if (!stream.isEquals(this))
            {
                //данные не совпадают!!!
                //возьмем от потомков
                IStream[] list = stream.findChilds(this);
                if (list.Length == 0)
                {
                    return false;
                }

                if (list.Length != 1)
                {
                    throw new Exception("В потоке несколько одинаковых данных");
                }
                nodeStream = list[0];
            }
            return onRestoreData(nodeStream);
        }
        ///--------------------------------------------------------------------------------------











         ///=====================================================================================
        ///
        /// <summary>
        /// Сохранение данных, на уровне потомков
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        protected virtual bool onSaveData(IStream stream)
        {
            return true;
        }
        ///--------------------------------------------------------------------------------------










         ///=====================================================================================
        ///
        /// <summary>
        /// Востановление данных на уровне унаследованных объектов
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        protected virtual bool onRestoreData(IStream stream)
        {
            return true;
        }
        ///--------------------------------------------------------------------------------------









    }
}

#region Using framework
using System;
using System.Collections.Generic;
using Microsoft.Xna.Framework;
#endregion



namespace Pluton.SystemProgram
{
    ///--------------------------------------------------------------------------------------
    






    ///=====================================================================================
    ///
    /// <summary>
    /// Система описывающие поток для сохранения и записи данных
    /// 
    /// </summary>
    /// 
    ///--------------------------------------------------------------------------------------
    public interface IStream
    {
        ///--------------------------------------------------------------------------------------





         ///=====================================================================================
        ///
        /// <summary>
        /// возвратим версию реализованного потока
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        int getVersion();
        ///--------------------------------------------------------------------------------------


       






         ///=====================================================================================
        ///
        /// <summary>
        /// возвратим имя потока. который привязан к классу
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        string getTypeName();
        ///--------------------------------------------------------------------------------------






         ///=====================================================================================
        ///
        /// <summary>
        /// установим тип потока
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        void setTypeName(string name);
        ///--------------------------------------------------------------------------------------










         ///=====================================================================================
        ///
        /// <summary>
        /// Создать в текущем потоке объект
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        void creation(IMemberData obj);
        ///--------------------------------------------------------------------------------------







         ///=====================================================================================
        ///
        /// <summary>
        /// Создать ветку
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        IStream creationChild();
        ///--------------------------------------------------------------------------------------





         ///=====================================================================================
        ///
        /// <summary>
        /// поиск потоков у которых совпадают тип классов
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        IStream[] findChilds(IMemberData obj);
        ///--------------------------------------------------------------------------------------





         ///=====================================================================================
        ///
        /// <summary>
        /// возвратим список всех вложенных потоков
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        IStream[] getChilds();
        ///--------------------------------------------------------------------------------------





         ///=====================================================================================
        ///
        /// <summary>
        /// Взять первопопавшийся поток
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        IStream getFirstChild();
        ///--------------------------------------------------------------------------------------








         ///=====================================================================================
        ///
        /// <summary>
        /// проверка, является ли данный поток пустым
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        bool isEmpty();
        ///--------------------------------------------------------------------------------------



        


         ///=====================================================================================
        ///
        /// <summary>
        /// проверка, принадлежит ли поток к данному объекту
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        bool isEquals(IMemberData obj);
        ///--------------------------------------------------------------------------------------






         ///=====================================================================================
        ///
        /// <summary>
        /// Список всех ключей
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        List<string> keysPoint();
        ///--------------------------------------------------------------------------------------





         ///=====================================================================================
        ///
        /// <summary>
        /// Запись в текущий поток
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        void writePoint(string key, Point value);
        ///--------------------------------------------------------------------------------------






         ///=====================================================================================
        ///
        /// <summary>
        /// чтение из потока 
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        Point readPoint(string key, Point defaultValue);
        ///--------------------------------------------------------------------------------------








         ///=====================================================================================
        ///
        /// <summary>
        /// Список всех ключей
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        List<string> keysFloat();
        ///--------------------------------------------------------------------------------------





         ///=====================================================================================
        ///
        /// <summary>
        /// Запись в текущий поток
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        void writeFloat(string key, float value);
        ///--------------------------------------------------------------------------------------






         ///=====================================================================================
        ///
        /// <summary>
        /// чтение из потока 
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        float readFloat(string key, float defaultValue);
        ///--------------------------------------------------------------------------------------





         ///=====================================================================================
        ///
        /// <summary>
        /// Список всех ключей
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        List<string> keysVector2();
        ///--------------------------------------------------------------------------------------





         ///=====================================================================================
        ///
        /// <summary>
        /// Запись в текущий поток
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        void writeVector2(string key, Vector2 value);
        ///--------------------------------------------------------------------------------------






         ///=====================================================================================
        ///
        /// <summary>
        /// чтение из потока 
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        Vector2 readVector2(string key, Vector2 defaultValue);
        ///--------------------------------------------------------------------------------------







         ///=====================================================================================
        ///
        /// <summary>
        /// Список всех ключей
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        List<string> keysString();
        ///--------------------------------------------------------------------------------------






         ///=====================================================================================
        ///
        /// <summary>
        /// Запись строчек
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        void writeString(string key, string value);
        ///--------------------------------------------------------------------------------------






         ///=====================================================================================
        ///
        /// <summary>
        /// чтение строчек
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        string readString(string key, string defaultValue);
        ///--------------------------------------------------------------------------------------






         ///=====================================================================================
        ///
        /// <summary>
        /// Список всех ключей
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        List<string> keysInteger();
        ///--------------------------------------------------------------------------------------





         ///=====================================================================================
        ///
        /// <summary>
        /// Запись целочисленных значений
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        void writeInteger(string key, int value);
        ///--------------------------------------------------------------------------------------






         ///=====================================================================================
        ///
        /// <summary>
        /// чтение целочисленных значений
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        int readInteger(string key, int defaultValue);
        ///--------------------------------------------------------------------------------------








         ///=====================================================================================
        ///
        /// <summary>
        /// Список всех ключей
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        List<string> keysUInteger();
        ///--------------------------------------------------------------------------------------





         ///=====================================================================================
        ///
        /// <summary>
        /// Запись целочисленных значений
        /// без знака
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        void writeUInteger(string key, uint value);
        ///--------------------------------------------------------------------------------------






         ///=====================================================================================
        ///
        /// <summary>
        /// чтение целочисленных значений
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        uint readUInteger(string key, uint defaultValue);
        ///--------------------------------------------------------------------------------------








         ///=====================================================================================
        ///
        /// <summary>
        /// Список всех ключей
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        List<string> keysBoolean();
        ///--------------------------------------------------------------------------------------





         ///=====================================================================================
        ///
        /// <summary>
        /// Запись булевых значений
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        void writeBoolean(string key, bool value);
        ///--------------------------------------------------------------------------------------






         ///=====================================================================================
        ///
        /// <summary>
        /// чтение булевых значений
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        bool readBoolean(string key, bool defaultValue);
        ///--------------------------------------------------------------------------------------









         ///=====================================================================================
        ///
        /// <summary>
        /// Список всех ключей
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        List<string> keysLong();
        ///--------------------------------------------------------------------------------------





        ///=====================================================================================
        ///
        /// <summary>
        /// Запись больших значений
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        void writeLong(string key, long value);
        ///--------------------------------------------------------------------------------------






        ///=====================================================================================
        ///
        /// <summary>
        /// чтение больших значений
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        long readLong(string key, long defaultValue);
        ///--------------------------------------------------------------------------------------








         ///=====================================================================================
        ///
        /// <summary>
        /// Список всех ключей
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        List<string> keysBinary();
        ///--------------------------------------------------------------------------------------





         ///=====================================================================================
        ///
        /// <summary>
        /// Запись бинарных данных
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        void writeBinary(string key, byte[] value);
        ///--------------------------------------------------------------------------------------






         ///=====================================================================================
        ///
        /// <summary>
        /// чтение бинарных значений
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        byte[] readBinary(string key, byte[] defaultValue);
        ///--------------------------------------------------------------------------------------




    }

    ///--------------------------------------------------------------------------------------
    ///--------------------------------------------------------------------------------------
    ///--------------------------------------------------------------------------------------
    ///--------------------------------------------------------------------------------------
    ///--------------------------------------------------------------------------------------
    ///--------------------------------------------------------------------------------------
    ///--------------------------------------------------------------------------------------
    ///--------------------------------------------------------------------------------------





    public class AStreamHelper
    {
        ///--------------------------------------------------------------------------------------





         ///=====================================================================================
        ///
        /// <summary>
        /// чтение прямоугольника
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        public static Rectangle readRectangle(IStream stream, string name, Rectangle rect)
        {
            Point a = stream.readPoint(name + "A", new Point(rect.Left, rect.Top));
            Point b = stream.readPoint(name + "B", new Point(rect.Width, rect.Height));
            return new Rectangle(a.X, a.Y, b.X, b.Y);
        }
        ///--------------------------------------------------------------------------------------





         ///=====================================================================================
        ///
        /// <summary>
        /// запись прямоугольника
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        public static void writeRectangle(IStream stream, string name, Rectangle rect)
        {
            stream.writePoint(name + "A", new Point(rect.Left, rect.Top));
            stream.writePoint(name + "B", new Point(rect.Width, rect.Height));
        }
        ///--------------------------------------------------------------------------------------





         ///=====================================================================================
        ///
        /// <summary>
        /// Поиск потомка по его типу
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        public static IStream findChild(IStream stream, string typeName)
        {
            foreach (var s in stream.getChilds())
            {
                if (s.getTypeName() == typeName)
                {
                    return s;
                }
            }
            return null;
        }
        ///--------------------------------------------------------------------------------------





         ///=====================================================================================
        ///
        /// <summary>
        /// Создание потомка
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        public static IStream createChild(IStream stream, string typeName)
        {
            IStream child = stream.creationChild();
            child.setTypeName(typeName);
            return child;
        }
        ///--------------------------------------------------------------------------------------





   
         ///=====================================================================================
        ///
        /// <summary>
        /// чтение таймера
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        public static TimeSpan readTimeSpan(IStream stream, string name, TimeSpan time)
        {
            return TimeSpan.FromSeconds(stream.readUInteger(name, (uint)time.TotalSeconds));
        }
        ///--------------------------------------------------------------------------------------





         ///=====================================================================================
        ///
        /// <summary>
        /// запись таймера
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        public static void writeTimeSpan(IStream stream, string name, TimeSpan time)
        {
            stream.writeUInteger(name, (uint)time.TotalSeconds);
        }
        ///--------------------------------------------------------------------------------------





    }




}

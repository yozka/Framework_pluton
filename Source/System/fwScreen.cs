#region Using framework
using System;
using Microsoft.Xna.Framework;
using Microsoft.Xna.Framework.Input;
using Microsoft.Xna.Framework.Input.Touch;
using Microsoft.Xna.Framework.Content;
#endregion

namespace Pluton.SystemProgram
{
    ///--------------------------------------------------------------------------------------
    using Devices;
    using GUI;
    ///--------------------------------------------------------------------------------------




    





     ///=====================================================================================
    ///
    /// <summary>
    /// Базовый экран, предсавляющий один слой, который может отрисовыватся и 
    /// делать логические штуки.
    /// Может быть объединен с другими слоями для создания комплексной системы меню.
    /// Например, в главном меню, пункты меню, "Вы уверены?",
    /// Также эти экраны можно использовать как диалоговые окна, 
    /// Причем вся игра реализованна
    /// на экранах.
    /// </summary>
    /// 
    ///--------------------------------------------------------------------------------------
    public abstract class AScreen
    {
        private AScreenManager mScreenManager = null;
        
        private bool mInitialized   = false; //признак инциализации экрана
        private bool mClose         = false; //закрытие экрана
        private bool mActive        = false; //активный или не активное окно, находится оно в фокусе или нет
        private bool mFirstShow     = true;  //первый запуск экрана
        private bool mPopup         = false; //всплывающие окно которое неперекрывает существющие
        private bool mExitScreen    = false; //признак того что уже выолнили выход из экрана

        private EScreenState mState         = EScreenState.hide;
        private double       mTransition    = 0.0f;
        private TimeSpan     mTimeShowing   = TimeSpan.Zero;
        private TimeSpan     mTimeHiding    = TimeSpan.Zero;

        private AWidget      mCentralWidget = null; //центральный виджет
        ///--------------------------------------------------------------------------------------







         ///=====================================================================================
        ///
        /// <summary>
        /// Описываеем состояния перехода экрана.
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        protected enum EScreenState
        {
            startShow,      //начало показа экрана
            transitionShow, //процесс показа экрана
            show,           //экран показывается
            startHide,      //экран начали скрывать
            transitionHide, //экран процесс скрытия
            hide            //экран скрыт полностью
        }
        ///--------------------------------------------------------------------------------------


        


         ///=====================================================================================
        ///
        /// <summary>
        /// показывается или нет окно
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        public bool isVisible()
        {
            return (mState != EScreenState.hide && mState != EScreenState.startShow) ? true : false;
        }
        ///--------------------------------------------------------------------------------------





         ///=====================================================================================
        ///
        /// <summary>
        /// показывается состояния окна
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        public bool isShow()
        {
            return (mState == EScreenState.show) ? true : false;
        }
        ///--------------------------------------------------------------------------------------





        

         ///=====================================================================================
        ///
        /// <summary>
        /// Проверка, является ли экран активным, и он принимает сигналы с переферии воода информации
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        public bool isActive()
        {
            return mActive;
        }
        ///--------------------------------------------------------------------------------------



         ///=====================================================================================
        ///
        /// <summary>
        /// Проверка, первого запуска 
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        public bool isFirstShow()
        {
            return mFirstShow;
        }
        ///--------------------------------------------------------------------------------------






         ///=====================================================================================
        ///
        /// <summary>
        /// Проверка, является окно вспылвающим или нет
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        public bool isPopup()
        {
            return mPopup;
        }
        ///--------------------------------------------------------------------------------------



       
        
         ///=====================================================================================
        ///
        /// <summary>
        /// установка режимак окна
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        protected void setPopup(bool enabled)
        {
            mPopup = enabled;
        }
        ///--------------------------------------------------------------------------------------




         ///=====================================================================================
        ///
        /// <summary>
        /// ВОзвращаем менеджера экрана, кому экран принадлежит.
        /// (это свйоство инцилизирует менеджер экранов)
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        public AScreenManager screenManager
        { 
            get
            {
                return mScreenManager;
            }
        }
        ///--------------------------------------------------------------------------------------









         ///=====================================================================================
        ///
        /// <summary>
        /// Инциализация экрана
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        public void initialized(AScreenManager manager)
        {
            mScreenManager = manager;
            if (!mInitialized)
            {
                mInitialized = true;
                mFirstShow = true;
                onInitialized();
            }
        }
        ///--------------------------------------------------------------------------------------







         ///=====================================================================================
        ///
        /// <summary>
        /// Виртуальный метод инциализации экрана, выполняется только один раз
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        protected virtual void onInitialized()
        {
        }
        ///--------------------------------------------------------------------------------------




         ///=====================================================================================
        ///
        /// <summary>
        /// установка времени
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        public TimeSpan timeShowing
        {
            get
            {
                return mTimeShowing;
            }
            set
            {
                mTimeShowing = value;
            }
        }
        ///--------------------------------------------------------------------------------------






         ///=====================================================================================
        ///
        /// <summary>
        /// установка времени
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        public TimeSpan timeHiding
        {
            get
            {
                return mTimeHiding;
            }
            set
            {
                mTimeHiding = value;
            }
        }
        ///--------------------------------------------------------------------------------------





         ///=====================================================================================
        ///
        /// <summary>
        /// значение при показе скрытие экрана
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        public float transition
        {
            get
            {
                return (float)mTransition;
            }
        }
        ///--------------------------------------------------------------------------------------





         ///=====================================================================================
        ///
        /// <summary>
        /// проверка, есть ли анимации показа экранов или нет
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        public bool isTransition()
        {
            return (mState == EScreenState.transitionHide || mState == EScreenState.transitionShow) ? true : false;
        }
        ///--------------------------------------------------------------------------------------






         ///=====================================================================================
        ///
        /// <summary>
        /// метод добавление экрана в менеджер
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        public void add()
        {
            mClose = false;
            mExitScreen = false;
            mState = EScreenState.startShow;
            onAdd();
        }
        ///--------------------------------------------------------------------------------------








         ///=====================================================================================
        ///
        /// <summary>
        /// Виртуальный метод добавление экрана в менеджер
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        protected virtual void onAdd()
        {
        }
        ///--------------------------------------------------------------------------------------




         ///=====================================================================================
        ///
        /// <summary>
        /// повторное добавление экрана в менеджер
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        public void reinclusion()
        {
            mClose = false;
            mExitScreen = false;
            mState = EScreenState.startShow;
            onReinclusion();
        }
        ///--------------------------------------------------------------------------------------




         ///=====================================================================================
        ///
        /// <summary>
        /// повторное добавление экрана в менеджер
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        protected virtual void onReinclusion()
        {
        }
        ///--------------------------------------------------------------------------------------





         ///=====================================================================================
        ///
        /// <summary>
        /// метод уберание экрана из менеджера
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        public void remove()
        {
            mExitScreen = false;
            mClose = false; //закрытие экрана
            mState = EScreenState.hide;
            mTransition = 0;
            mFirstShow = false;
            onRemove();
        }
        ///--------------------------------------------------------------------------------------








         ///=====================================================================================
        ///
        /// <summary>
        /// Виртуальный метод уберание экрана из менеджера
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        protected virtual void onRemove()
        {
        }
        ///--------------------------------------------------------------------------------------






         ///=====================================================================================
        ///
        /// <summary>
        /// Идет запуск внутренней логики экрана, такое как обновление переход положение.
        /// В отличие от handleInput, этот метод вызвывается независимо от того,
        /// активен ли экран, или находится ли он на переходе.
        /// Пользоватся этим методом нужно осторожно, ибо он вызывается всегда.
        /// 
        ///--------------------------------------------------------------------------------------
        public void update(TimeSpan gameTime)
        {
            switch (mState)
            {
                case EScreenState.show:
                    {
                        onUpdate(gameTime);
                        return;
                    }
                
                
                //начало показа
                case EScreenState.startShow:
                    {
                        mState = EScreenState.transitionShow;
                        onTransitionShow();
                        break;
                    }

                //процесс показа экрана
                case EScreenState.transitionShow:
                    {
                        if (!updateTransition(gameTime, mTimeShowing, 1))
                        {
                            //экран показали, переводим в режим показа
                            mState = EScreenState.show;
                            onShow();
                        }
                        break;
                    }

                //процесс закрытие экрана
                case EScreenState.startHide:
                    {
                        mState = EScreenState.transitionHide;
                        onTransitionHide();
                        break;
                    }

                //процесс закрытие экрана
                case EScreenState.transitionHide:
                    {
                        if (!updateTransition(gameTime, mTimeHiding, -1))
                        {
                            mState = EScreenState.hide;
                            onHide();
                        }
                        break;
                    }

                //полностью закроем экран
                case EScreenState.hide:
                    {
                        if (mClose)
                        {
                            screenManager.removeScreen(this);
                            return;
                        }
                        break;
                    }

            }
           
            
        }
        ///--------------------------------------------------------------------------------------







         ///=====================================================================================
        ///
        /// <summary>
        /// Идет запуск внутренней логики экрана, такое как обновление переход положение.
        /// В отличие от handleInput, этот метод вызвывается независимо от того,
        /// активен ли экран, или находится ли он на переходе.
        /// Пользоватся этим методом нужно осторожно, ибо он вызывается всегда.
        /// 
        ///--------------------------------------------------------------------------------------
        protected virtual void onUpdate(TimeSpan gameTime)
        {
        }
        ///--------------------------------------------------------------------------------------







         ///=====================================================================================
        ///
        /// <summary>
        /// Вспомогательный метод по обновлению положение экрана перехода.
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        private bool updateTransition(TimeSpan gameTime, TimeSpan time, int direction)
        {
            double transitionDelta;

            if (time == TimeSpan.Zero)
                transitionDelta = 1.0f;
            else
                transitionDelta = gameTime.TotalMilliseconds / time.TotalMilliseconds;

            // обновляем текущую позицию
            mTransition += transitionDelta * direction;

            // проверка, на выполнение полностю перехода
            if (direction < 0 && mTransition <= 0)
            {
                mTransition = 0.0f;
                return false;
            }

            if (direction > 0  && mTransition >= 1)
            {
                mTransition = 1.0f;
                return false;
            }
            // переход еще не завершен
            return true;
        }
        ///--------------------------------------------------------------------------------------







         ///=====================================================================================
        ///
        /// <summary>
        /// Метод обрабатывает пользовательский ввод. В отличие от обновления, этот метод
        /// вызывается только когда экран активен, а не тогда, когда другие
        /// экран перехватили фокус.
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        public virtual void onHandleInput(AInputDevice input)
        {

        }
        ///--------------------------------------------------------------------------------------







         ///=====================================================================================
        ///
        /// <summary>
        /// Отрисовка экрана
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        public virtual void onDraw(ASpriteBatch spriteBatch)
        {
        }
        ///--------------------------------------------------------------------------------------







         ///=====================================================================================
        ///
        /// <summary>
        /// закрытие экрана, и полностью его удаление
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        public void exitScreen()
        {
            if (mScreenManager == null)
            {
                return;
            }

            if (signal_exitScreen != null && !mExitScreen)
            {
                mExitScreen = true;
                signal_exitScreen();
            }
            
            if (mState == EScreenState.hide)
            {
                screenManager.removeScreen(this);
            }
            else
            {
                mClose = true;
                mState = EScreenState.startHide;
            }
        }
        ///--------------------------------------------------------------------------------------





         ///=====================================================================================
        ///
        /// <summary>
        /// закрытие окна
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        public delegate void eventExitScreen();
        public event eventExitScreen signal_exitScreen;
        ///--------------------------------------------------------------------------------------






         ///=====================================================================================
        ///
        /// <summary>
        /// активация фокуса у экрана
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        public void focusActivation(AScreen focus)
        {
            mActive = true;
            onFocusActivation(focus);
        }
        ///--------------------------------------------------------------------------------------




         ///=====================================================================================
        ///
        /// <summary>
        /// активация фокуса у экрана
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        protected virtual void onFocusActivation(AScreen focus)
        {
        }
        ///--------------------------------------------------------------------------------------






         ///=====================================================================================
        ///
        /// <summary>
        /// Снятие фокуса у экрана
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        public void focusDeactivation(AScreen focus)
        {
            onFocusDeactivation(focus);
            mActive = false;
        }
        ///--------------------------------------------------------------------------------------





         ///=====================================================================================
        ///
        /// <summary>
        /// Снятие фокуса у экрана
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        protected virtual void onFocusDeactivation(AScreen focus)
        {

        }
        ///--------------------------------------------------------------------------------------







         ///=====================================================================================
        ///
        /// <summary>
        /// начало перехода экрана
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        protected virtual void onTransitionShow()
        {

        }
        ///--------------------------------------------------------------------------------------





         ///=====================================================================================
        ///
        /// <summary>
        /// Полностью показался экран
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        protected virtual void onShow()
        {

        }
        ///--------------------------------------------------------------------------------------





         ///=====================================================================================
        ///
        /// <summary>
        /// начало перехода экрана
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        protected virtual void onTransitionHide()
        {

        }
        ///--------------------------------------------------------------------------------------





        ///=====================================================================================
        ///
        /// <summary>
        /// начало перехода экрана
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        protected virtual void onHide()
        {

        }
        ///--------------------------------------------------------------------------------------








         ///=====================================================================================
        ///
        /// <summary>
        /// возвратим центральный виджет
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        public AWidget centralWidget
        {
            get
            {
                return mCentralWidget;
            }
        }
        ///--------------------------------------------------------------------------------------









         ///=====================================================================================
        ///
        /// <summary>
        /// установка центрального виджета
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        public AWidget setCentralWidget(AWidget widget)
        {
            mCentralWidget = widget;
            return mCentralWidget;
        }
        ///--------------------------------------------------------------------------------------





        
         ///=====================================================================================
        ///
        /// <summary>
        /// Переинциализация графики
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        public virtual void onResetGraphics()
        {
        }
        ///--------------------------------------------------------------------------------------







 
        

    }//AGameScreen
}

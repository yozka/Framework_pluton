#region Using framework
using System;
using System.Net.Http;
using System.Text;
#endregion





namespace Pluton.SystemProgram.Devices
{
    ///--------------------------------------------------------------------------------------
    ///--------------------------------------------------------------------------------------







    ///=====================================================================================
    ///
    /// <summary>
    /// Команды отправляемые на произвольный сервер
    /// </summary>
    /// 
    ///--------------------------------------------------------------------------------------
    public class AWebRequest
            :
                AWebQuery
    {
        ///--------------------------------------------------------------------------------------
        private string mUrl = string.Empty;
        private string mResult = null;
        private Object mUserData = null;
        ///--------------------------------------------------------------------------------------






        ///=====================================================================================
        ///
        /// <summary>
        /// constructor
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        public AWebRequest()
        {

        }
        ///--------------------------------------------------------------------------------------






        ///=====================================================================================
        ///
        /// <summary>
        /// constructor
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        public AWebRequest(string url)
        {
            mUrl = url;
        }
        ///--------------------------------------------------------------------------------------





        ///=====================================================================================
        ///
        /// <summary>
        /// пользовательские данные
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        public Object userData
        {
            get
            {
                return mUserData;
            }

            set
            {
                mUserData = value;
            }
        }
        ///--------------------------------------------------------------------------------------







        ///=====================================================================================
        ///
        /// <summary>
        /// установка адреса для отправки
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        public void setUrl(string url)
        {
            mUrl = url;
        }
        ///--------------------------------------------------------------------------------------






        ///=====================================================================================
        ///
        /// <summary>
        /// начало выполнения команды
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        protected override void onSend()
        {
            sendHttp();
            /*
            web.Headers["Content-Type"] = "application/x-www-form-urlencoded";
            web.Encoding = Encoding.UTF8;
            web.UploadStringAsync(new Uri(mUrl), "POST", string.Empty, this);*/
        }
        ///--------------------------------------------------------------------------------------





        ///=====================================================================================
        ///
        /// <summary>
        /// выполнение команды
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        protected async void sendHttp()
        {
            using (var data = await network.http.GetAsync(mUrl))
            {
                mResult = data.Content.ReadAsStringAsync().Result;
                executeCompleted();
            }
        }
        ///--------------------------------------------------------------------------------------







        ///=====================================================================================
        ///
        /// <summary>
        /// команда выполнилась
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        /*
        protected override void onExecute(string data)
        {
            mResult = data;
        }*/
        ///--------------------------------------------------------------------------------------







        ///=====================================================================================
        ///
        /// <summary>
        /// очистить всю команду
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        protected override void onClear()
        {
            mResult = null;
        }
        ///--------------------------------------------------------------------------------------






        ///=====================================================================================
        ///
        /// <summary>
        /// возвартим результат работы команды
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        public string resultText
        {
            get
            {
                return mResult == null ? string.Empty : mResult;
            }
        }
        ///--------------------------------------------------------------------------------------






    }
}

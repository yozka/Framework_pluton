#region Using framework
using System;
using System.Collections.Generic;
using Microsoft.Xna.Framework;
using Microsoft.Xna.Framework.Content;
using Microsoft.Xna.Framework.Graphics;
#endregion



namespace Pluton.SystemProgram.Devices
{
    ///--------------------------------------------------------------------------------------

    ///--------------------------------------------------------------------------------------







     ///=====================================================================================
    ///
    /// <summary>
    /// Глобальный доступ для аналитики
    /// 
    /// </summary>
    /// 
    ///--------------------------------------------------------------------------------------
    public class gAnalytics
    {
        ///--------------------------------------------------------------------------------------
        private static AAnalytics mParent = null;
        ///--------------------------------------------------------------------------------------







         ///=====================================================================================
        ///
        /// <summary>
        /// Constructor
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        public gAnalytics()
        {


        }
        ///--------------------------------------------------------------------------------------









        ///=====================================================================================
        ///
        /// <summary>
        /// привязка
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        public static void setInstance(AAnalytics parent)
        {
            /*fix
            if (mParent != null)
            {
                throw new Exception("Аналитика уже проброшенна");
            }*/
            mParent = parent;
        }
        ///--------------------------------------------------------------------------------------










         ///=====================================================================================
        ///
        /// <summary>
        /// событие с параметром
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        public static void eventParam(string eventName, string paramName)
        {
            if (mParent != null)
            {
                mParent.eventParam(eventName, paramName);
            }
        }
        ///--------------------------------------------------------------------------------------












         ///=====================================================================================
        ///
        /// <summary>
        /// начало выполнения сообщения
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        public static void beginEvent(string eventName)
        {
            if (mParent != null)
            {
                mParent.beginEvent(eventName);
            }
        }
        ///--------------------------------------------------------------------------------------






        ///=====================================================================================
        ///
        /// <summary>
        /// конец выполнения сообщения
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        public static void endEvent(string eventName)
        {
            if (mParent != null)
            {
                mParent.endEvent(eventName);
            }
        }
        ///--------------------------------------------------------------------------------------








         ///=====================================================================================
        ///
        /// <summary>
        /// событие c параметрами
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        public static void trackEvent(string eventName, IDictionary<string, string> properties)
        {
            if (mParent != null)
            {
                mParent.trackEvent(eventName, properties);
            }
        }
        ///--------------------------------------------------------------------------------------







         ///=====================================================================================
        ///
        /// <summary>
        /// ошибка
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        public static void trackException(Exception ex)
        {
            if (mParent != null)
            {
                mParent.trackException(ex);
            }
        }
        ///--------------------------------------------------------------------------------------







        ///--------------------------------------------------------------------------------------




    }
}

#region Using framework
using System;
using System.Collections.Generic;
using Microsoft.Xna.Framework.Audio;
using Microsoft.Xna.Framework.Content;
#endregion


namespace Pluton.SystemProgram.Devices
{
    ///--------------------------------------------------------------------------------------






     ///=====================================================================================
    ///
    /// <summary>
    /// Система звуковых эффектов
    /// </summary>
    /// 
    ///--------------------------------------------------------------------------------------
    public class ASoundDevice
    {
        ///--------------------------------------------------------------------------------------
        private bool mEnabled = true;
        private Dictionary<string, SoundEffect>         mSounds = new Dictionary<string,SoundEffect>();
        private Dictionary<string, SoundEffectInstance> mSoundsOne = new Dictionary<string, SoundEffectInstance>();
        ///--------------------------------------------------------------------------------------



        

         ///=====================================================================================
        ///
        /// <summary>
        /// Constructor
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        public ASoundDevice()
        {
        }
        ///--------------------------------------------------------------------------------------






         ///=====================================================================================
        ///
        /// <summary>
        /// Включенна выключена звуковые эффекты
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        public bool enabled
        {
            get
            {
                return mEnabled;
            }
            set
            {
                mEnabled = value;
            }
        }
        ///--------------------------------------------------------------------------------------








         ///=====================================================================================
        ///
        /// <summary>
        /// Загрузка контента музыки
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        public void loadContent(ContentManager content)
        {
            foreach (var name in AFrameworkSettings.sounds)
            {
                loadSound(name, content);
            }
        }
        ///--------------------------------------------------------------------------------------





 
        ///=====================================================================================
        ///
        /// <summary>
        /// Загрузка контента музыки
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        private void loadSound(string name, ContentManager content)
        {
            var sound = content.Load<SoundEffect>("Sound\\" + name);
            var soundOne = sound.CreateInstance();
            mSounds[name] = sound;
            mSoundsOne[name] = soundOne;
        }
        ///--------------------------------------------------------------------------------------









         ///=====================================================================================
        ///
        /// <summary>
        /// проигрование звуков
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        public void play(SoundEffect sound)
        {
            if (mEnabled && sound != null)
            {
                sound.Play();
            }
        }
        ///--------------------------------------------------------------------------------------





         ///=====================================================================================
        ///
        /// <summary>
        /// Проигрывание звука
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        public void play(string name)
        {
            if (mEnabled && mSounds.ContainsKey(name))
            {
                var sound = mSounds[name];
                sound.Play();
            }
        }
        ///--------------------------------------------------------------------------------------




        
         ///=====================================================================================
        ///
        /// <summary>
        /// Проигрывание звука
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        public void playOne(string name)
        {
            if (mEnabled && mSoundsOne.ContainsKey(name))
            {
                var sound = mSoundsOne[name];
                if (sound.State == SoundState.Playing)
                {
                    return;
                }
                sound.Play();
            }
        }
        ///--------------------------------------------------------------------------------------







         ///=====================================================================================
        ///
        /// <summary>
        /// прогрывание музыки через очередь
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        public void update(TimeSpan gameTime)
        {
          
        }
        ///--------------------------------------------------------------------------------------








         ///=====================================================================================
        ///
        /// <summary>
        /// Загрузка настроек
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        public void loadSettings(AStorage settings)
        {
            mEnabled = settings.readBoolean("sound", mEnabled);
        }
        ///--------------------------------------------------------------------------------------







         ///=====================================================================================
        ///
        /// <summary>
        /// Сохранение настроек
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        public void saveSettings(AStorage settings)
        {
            settings.writeBoolean("sound", mEnabled);
        }
        ///--------------------------------------------------------------------------------------
       


       


    }
}

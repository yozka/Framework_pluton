#region Using framework
using System;
using System.Collections.Generic;
using Microsoft.Xna.Framework;
using Microsoft.Xna.Framework.Graphics;
#endregion




#if RENDER_DEBUG
using System.Diagnostics;
#endif


namespace Pluton.GUI
{
    ///------------------------------------------------------------------------------------------
    using Pluton;
    using Pluton.SystemProgram;
    using Pluton.SystemProgram.Devices;
    using Pluton.GraphicsElement;
    ///------------------------------------------------------------------------------------------








    ///=========================================================================================
    ///
    /// <summary>
    /// контрл вертикального скроллинга
    /// 
    /// </summary>
    /// 
    ///------------------------------------------------------------------------------------------
    public class AScrollArea
                :
                    AWidget
    {

        ///--------------------------------------------------------------------------------------

        ///--------------------------------------------------------------------------------------
        private AScrollBar  mScrollBar              = new AScrollBar();

        private AWidget     mContentWidget          = null; //сам виджет для отрисовки и показа
        private Rectangle   mViewPort               = Rectangle.Empty; //квадрат ограничивающий просмотр
        ///--------------------------------------------------------------------------------------






         ///=====================================================================================
        ///
        /// <summary>
        /// Конструктор
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        public AScrollArea(AWidget parent, int left, int top, int width, int height)
            :
            base(parent, left, top, width, height)
        {

        }
        ///--------------------------------------------------------------------------------------






         ///=====================================================================================
        ///
        /// <summary>
        /// установка виджета для скроллинга
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        public AWidget contentWidget
        {
            set
            {
                if (mContentWidget != null)
                {
                    mContentWidget.setParent(null);
                }
                mContentWidget = value;
                mContentWidget.setParent(this);
                updateViewPort();
            }

            get
            {
                return mContentWidget;
            }
        }
        ///--------------------------------------------------------------------------------------






         ///=====================================================================================
        ///
        /// <summary>
        /// возвратим высоту элемента
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        public AScrollBar scrollBar
        {
            set
            {
                mScrollBar = value;
                if (mScrollBar == null)
                {
                    mScrollBar = new AScrollBar();
                }
                updateViewPort();
            }
            get
            {
                return mScrollBar;
            }

        }
        ///--------------------------------------------------------------------------------------








        ///=====================================================================================
        ///
        /// <summary>
        /// Пересчитаем всю позицию данных
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        public void updateViewPort()
        {
            //подсчитаем изменения для скроллинга
            mScrollBar.setMargin(this);
 
            mViewPort = screenContentRect;
 
            mScrollBar.setPositionWidget(this);
        }
        ///--------------------------------------------------------------------------------------










         ///=====================================================================================
        ///
        /// <summary>
        /// Отрисовка одного элемента
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        /*
        protected virtual void onRenderItem(ASpriteBatch spriteBatch, Rectangle rect, int index)
        {
        }*/
        ///--------------------------------------------------------------------------------------












        ///=====================================================================================
        ///
        /// <summary>
        /// Отрисовка контрола с учетом располжения родителя
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        protected override void onRender(ASpriteBatch spriteBatch, Rectangle rect)
        {
          



            if (mContentWidget != null)
            {
                //spriteBatch.beginClipping(mViewPort);
                mContentWidget.render(spriteBatch);
                //spriteBatch.endClipping();
            }




            //отрисовка плашек
            //левая плашка
            //spriteBatch.Draw(spriteBatch.getSprite(sprite.gui_scroll_horizontal_margin), new Rectangle(rect.Left - 8, rect.Top, 16, rect.Height), Color.White);
            //


            //правая плашка
            int iRightIcon = rect.Right - 8;
            //spriteBatch.Draw(spriteBatch.getSprite(sprite.gui_scroll_horizontal_margin), new Rectangle(iRightIcon, rect.Top, 16, rect.Height), Color.White);
            //


            //spriteBatch.primitives.drawBorder(rect, 2, Color.Red);

        }
        ///--------------------------------------------------------------------------------------










        ///=====================================================================================
        ///
        /// <summary>
        /// обработка нажатий, если обработка удачная то возвращаем true
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        public override bool onHandleInput(AInputDevice input)
        {
            bool eventInput = false;
            if (mContentWidget != null)
            {
                eventInput = mContentWidget.onHandleInput(input);
            }
            
            return eventInput;
        }
        ///--------------------------------------------------------------------------------------




        ///=====================================================================================
        ///
        /// <summary>
        /// Обновление логики у контрола
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        public override void onUpdate(TimeSpan gameTime)
        {
            if (mContentWidget != null)
            {
                mContentWidget.onUpdate(gameTime);
            }
        }
        ///--------------------------------------------------------------------------------------





        ///=====================================================================================
        ///
        /// <summary>
        /// скроллированние данных
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        /*
        private void scrolling(Point ptDiff)
        {
            
        }*/
        ///--------------------------------------------------------------------------------------






        ///=====================================================================================
        ///
        /// <summary>
        /// скроллированние данных
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        /*
        private void clipping()
        {
         

        }*/
        ///--------------------------------------------------------------------------------------







        ///=====================================================================================
        ///
        /// <summary>
        /// изменение размеров одного элемента
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        /*
        protected virtual void onUpdatePositionItem(Rectangle rectItem, int index)
        {

        }*/
        ///--------------------------------------------------------------------------------------







        ///=====================================================================================
        ///
        /// <summary>
        /// пересборка
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        /*
        protected void refresh()
        {
           
        }*/
        ///--------------------------------------------------------------------------------------








        ///=====================================================================================
        ///
        /// <summary>
        /// скроллируем в центр с указанным индексом
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        /*
        protected void scrollCenter(int index)
        {
     
        }*/
        ///--------------------------------------------------------------------------------------





        ///=====================================================================================
        ///
        /// <summary>
        /// покажем текущий индекс который находится на экране
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        /*
        protected void visibleIndex(ref int indexBegin, ref int indexEnd)
        {
           
        }*/
        ///--------------------------------------------------------------------------------------






        ///=====================================================================================
        ///
        /// <summary>
        /// скроллируем в центр с указанным индексом
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        /*
        protected void scrollCenterMove(int index)
        {

        }*/
        ///--------------------------------------------------------------------------------------








    }
}

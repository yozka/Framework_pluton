#region Using framework
using System;
using Microsoft.Xna.Framework;
using Microsoft.Xna.Framework.Graphics;
#endregion




namespace Pluton.GUI
{
    ///------------------------------------------------------------------------------------------
    using Pluton.SystemProgram;
    using Pluton.SystemProgram.Devices;
    ///------------------------------------------------------------------------------------------






    ///=========================================================================================
    ///
    /// <summary>
    /// Виджет панелька
    /// 
    /// </summary>
    /// 
    ///------------------------------------------------------------------------------------------
    public class ADockwidget
                :
                    APanel
    {

       ///--------------------------------------------------------------------------------------
        private ATitle          mTitle          = null;
        private AControlButton  mButApply       = null; //кнопка применения
        private AControlButton  mButCancel      = null; //кнопка закрытия окна без применений
        private AControlButton  mButSysCancel   = null; //кнопка закрытия окна без применений
        private ATabs           mTabs           = null; //виджет с табуляторами
        ///--------------------------------------------------------------------------------------












         ///=====================================================================================
        ///
        /// <summary>
        /// Конструктор 2
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        public ADockwidget(AWidget parent, EStylePanel style, String title, ATitle.EStyleTytle styleTitle)
            :
            base(0, 0, style)
        {
            setParent(parent);


            if (title != null && styleTitle != ATitle.EStyleTytle.none)
            {
                mTitle = new ATitle(this, styleTitle);
                mTitle.text = title;
                resizeTitle();
            }


        }
        ///--------------------------------------------------------------------------------------




         ///=====================================================================================
        ///
        /// <summary>
        /// Конструктор 3
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        public ADockwidget(AWidget parent, EStylePanel style)
            :
            this(parent, style, null, ATitle.EStyleTytle.none)
        {
        }
        ///--------------------------------------------------------------------------------------






         ///=====================================================================================
        ///
        /// <summary>
        /// Конструктор
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        public ADockwidget(EStylePanel style, String title)
            :
            this(null, style, title, ATitle.EStyleTytle.tytle_A)
        {
        }
        ///--------------------------------------------------------------------------------------





         ///=====================================================================================
        ///
        /// <summary>
        /// Конструктор
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        public ADockwidget(EStylePanel style, String title, ATitle.EStyleTytle styleTitle)
            :
            this(null, style, title, styleTitle)
        {
        }
        ///--------------------------------------------------------------------------------------



         ///=====================================================================================
        ///
        /// <summary>
        /// заголовок
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        public string title
        {
            set
            {
                if (mTitle != null)
                {
                    mTitle.text = value;
                }
            }
            get
            {
                return mTitle != null ? mTitle.text : string.Empty;
            }
        }
        ///--------------------------------------------------------------------------------------






         ///=====================================================================================
        ///
        /// <summary>
        /// Добавление виджета в табулятор
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        public void addTab(uint icon, AFrame frame)
        {
            if (mTabs == null)
            {
                mTabs = new ATabs(this);
                mTabs.signal_change += slot_tabChange;
            }
            mTabs.addTab(icon, frame);
        }
        ///--------------------------------------------------------------------------------------





 
        ///=====================================================================================
        ///
        /// <summary>
        /// обработка данных ввода с тачпада и кнопок, возвращаем true когда произошла обработка
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        public override bool onHandleInput(AInputDevice input)
        {
            if (mTabs != null && mTabs.handleInput(input))
            {
                return true;
            }
            return base.onHandleInput(input);
        }
        ///--------------------------------------------------------------------------------------





         ///=====================================================================================
        ///
        /// <summary>
        /// Обновление логики у контрола
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        public override void onUpdate(TimeSpan gameTime)
        {
            if (mTabs != null)
            {
                mTabs.update(gameTime);
            }
            base.onUpdate(gameTime);
        }
        ///--------------------------------------------------------------------------------------





        ///=====================================================================================
        ///
        /// <summary>
        /// Отрисовка виджета
        /// рисуем заголовок и фон окна
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        protected override void onDrawBefore(ASpriteBatch spriteBatch)
        {
            float alpha = this.alpha;
            base.onDrawBefore(spriteBatch);

            if (mTitle != null)
            {
                spriteBatch.begin();
                mTitle.render(spriteBatch);
                spriteBatch.end();
            }


            //отрисовка табулятора
            if (mTabs != null)
            {
                mTabs.draw(spriteBatch);
            }

        }
        ///--------------------------------------------------------------------------------------










         ///=====================================================================================
        ///
        /// <summary>
        /// Смена имени в закладке табулятора
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        public void setTabIcon(uint icon, int column)
        {
            if (mTabs != null)
            {
                mTabs.setTabIcon(icon, column);
            }
        }
        ///--------------------------------------------------------------------------------------








        ///=====================================================================================
        ///
        /// <summary>
        /// установка активного таба
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        public void setIndexTab(int index)
        {
            if (mTabs != null)
            {
                mTabs.setIndex(index);
            }
        }
        ///--------------------------------------------------------------------------------------





        ///=====================================================================================
        ///
        /// <summary>
        /// возвврат координат отрисовки вкладки
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        public Rectangle getScreenBoundTab(int index)
        {
            if (mTabs != null)
            {
                return mTabs.getScreenBoundTab(index);
            }
            return Rectangle.Empty;
        }
        ///--------------------------------------------------------------------------------------






        ///=====================================================================================
        ///
        /// <summary>
        /// возврат активного таба
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        public int indexTab
        {
            get
            {
                return (mTabs != null) ? mTabs.indexTab : -1;
            }
        }
        ///--------------------------------------------------------------------------------------







        ///=====================================================================================
        ///
        /// <summary>
        /// возврат активного таба
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        public AFrame currentTab()
        {
            return (mTabs != null) ? mTabs.currentTab() : null;
        }
        ///--------------------------------------------------------------------------------------





         ///=====================================================================================
        ///
        /// <summary>
        /// Смена табов
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        public event ATabs.eventChange signal_tabChange;
        protected void slot_tabChange(int index, int lastIndex)
        {
            if (signal_tabChange != null)
            {
                signal_tabChange(index, lastIndex);
            }
        }
        ///--------------------------------------------------------------------------------------





         ///=====================================================================================
        ///
        /// <summary>
        /// поиск виджетов потомков
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        protected override AWidget onFindChilds(string name)
        {
            AWidget wg = base.onFindChilds(name);
            if (wg == null && mTabs != null)
            {
                wg = mTabs.findWidgetName(name);
            }
            return wg;
        }
        ///--------------------------------------------------------------------------------------






         ///=====================================================================================
        ///
        /// <summary>
        /// изменение размеров и позиция виджета
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        protected override void onResize(bool changeLeft, bool changeTop, bool changeWidth, bool changeHeight)
        {
            if (mTabs != null)
            {
                mTabs.resize();
            }

            if ((changeHeight || changeWidth) && mTitle != null)
            {
                resizeTitle();
            }
        }
        ///--------------------------------------------------------------------------------------





        
         ///=====================================================================================
        ///
        /// <summary>
        /// изменение размеров и позиция виджета
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        private void resizeTitle()
        {
            if (mTitle == null)
            {
                return;
            }
            Point pt = new Point(contentWidth / 2, 0);
            mTitle.setPositionCenter(pt);
        }
        ///--------------------------------------------------------------------------------------







         ///=====================================================================================
        ///
        /// <summary>
        /// отслеживание добавления виджета в список
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        protected override void onAddWidget(AWidget widget)
        {
            if (widget is ADockwidgetButton || widget is ADockwidgetSysButton)
            {
                AAlignFrame align = new AAlignSysButton(this);
                align.resize();
            }
        }
        ///--------------------------------------------------------------------------------------






         ///=====================================================================================
        ///
        /// <summary>
        /// добавить кнопку закрытия окна
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        public AControlButton addSysButtonCancel()
        {
            if (mButSysCancel == null)
            {
                mButSysCancel = new ADockwidgetSysButton(this, sprite.gui_icon_cancel, ATheme.dockwidget_cancelSpriteID);
                mButSysCancel.setNameWidget("sysButtonCancel");
                addWidget(mButSysCancel);
            }
            return mButSysCancel;
        }
        ///--------------------------------------------------------------------------------------





         ///=====================================================================================
        ///
        /// <summary>
        /// добавить кнопку закрытия окна
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        public AControlButton addButtonCancel()
        {
            if (mButCancel == null)
            {
                mButCancel = new ADockwidgetButton(this, sprite.gui_icon_cancel, sprite.gui_button_icon_red);
                mButCancel.setNameWidget("buttonCancel");
                addWidget(mButCancel);
            }
            return mButCancel;
        }
        ///--------------------------------------------------------------------------------------






         ///=====================================================================================
        ///
        /// <summary>
        /// добавить кнопку применения
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        public AControlButton addButtonApply()
        {
            if (mButApply == null)
            {
                mButApply = new ADockwidgetButton(this, sprite.gui_icon_ok);
                mButApply.setNameWidget("buttonApply");
                addWidget(mButApply);
            }
            return mButApply;
        }
        ///--------------------------------------------------------------------------------------



    }
    ///--------------------------------------------------------------------------------------
    ///--------------------------------------------------------------------------------------
    ///--------------------------------------------------------------------------------------












     ///=========================================================================================
    ///
    /// <summary>
    /// Кнопка c иконкой прицеплются к виджету
    /// 
    /// </summary>
    /// 
    ///------------------------------------------------------------------------------------------
    public class ADockwidgetButton
                    :
                        AButtonIcon
    {
        ///--------------------------------------------------------------------------------------
        public ADockwidgetButton(AFrame parent, uint spriteIcon)
            : base(parent, spriteIcon, 0, 0)
        {
            
        }
        ///--------------------------------------------------------------------------------------
        public ADockwidgetButton(AFrame parent, uint spriteIcon, uint spriteButton)
            : base(parent, spriteIcon, spriteButton, 0, 0)
        {
        }
        ///--------------------------------------------------------------------------------------
    }
    ///--------------------------------------------------------------------------------------
    ///--------------------------------------------------------------------------------------
    ///--------------------------------------------------------------------------------------











     ///=========================================================================================
    ///
    /// <summary>
    /// Кнопка c надписью 
    /// для заголовка окна
    /// 
    /// </summary>
    /// 
    ///------------------------------------------------------------------------------------------
    public class ADockwidgetSysButton
                    :
                        AButtonIcon
    {
        ///--------------------------------------------------------------------------------------
        public ADockwidgetSysButton(AFrame parent, uint spriteIcon)
            : base(parent, spriteIcon, 0, 0)
        {
            scale = 0.5f;
        }
        ///--------------------------------------------------------------------------------------
        public ADockwidgetSysButton(AFrame parent, uint spriteIcon, uint spriteButton)
            : base(parent, spriteIcon, spriteButton, 0, 0)
        {
            scale = 0.5f;
        }
        ///--------------------------------------------------------------------------------------
    }
    ///--------------------------------------------------------------------------------------
    ///--------------------------------------------------------------------------------------
    ///--------------------------------------------------------------------------------------


}

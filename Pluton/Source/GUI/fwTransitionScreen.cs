#region Using framework
using System;
using Microsoft.Xna.Framework;
using Microsoft.Xna.Framework.Content;
using Microsoft.Xna.Framework.Graphics;
#endregion



namespace Pluton.GUI
{
    ///--------------------------------------------------------------------------------------
    using Pluton.SystemProgram;
    ///--------------------------------------------------------------------------------------







     ///=====================================================================================
    ///
    /// <summary>
    /// Интерфейс системы перехода между экранами
    /// 
    /// </summary>
    /// 
    ///--------------------------------------------------------------------------------------
    public class ATransitionScreen
                :
                    IScreenFrame
    {
        ///--------------------------------------------------------------------------------------
        private readonly AScreen    mScreen     = null; //экран переходящий
        private AScreenManager      mManager    = null;
        private bool                mAddScreen  = false;
        ///--------------------------------------------------------------------------------------






         ///=====================================================================================
        ///
        /// <summary>
        /// Constructor
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        public ATransitionScreen(AScreen screen)
        {
            mScreen = screen;
        }
        ///--------------------------------------------------------------------------------------





         ///=====================================================================================
        ///
        /// <summary>
        /// Проверка, спрайты загружены или нет
        /// если спрайты загружены, то возвратим true
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        protected bool isLoadContent()
        {
            if (mManager != null)
            {
                return !mManager.isSpriteLoading();
            }
            return true;
        }
        ///--------------------------------------------------------------------------------------





         ///=====================================================================================
        ///
        /// <summary>
        /// Принудительная загрузка спрайта
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        protected void spriteLoadForced(uint spriteID)
        {
            mManager.spriteLoadForced(spriteID);
        }
        ///--------------------------------------------------------------------------------------










         ///=====================================================================================
        ///
        /// <summary>
        /// проверка, является ли активным данный экрна загрузки перехода урвоня или нет
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        public bool isActive()
        {
            return mManager != null ? true : false;
        }
        ///--------------------------------------------------------------------------------------






         ///=====================================================================================
        ///
        /// <summary>
        /// добавление в менеджер окон
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        public void connectManager(AScreenManager manager)
        {
            mManager = manager;
            mAddScreen = false;
            onStart(mManager.devices.input.lastTouch);
        }
        ///--------------------------------------------------------------------------------------









         ///=====================================================================================
        ///
        /// <summary>
        /// уберание из менеджера окон
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        public void disconnectManager(AScreenManager manager)
        {
            mManager = null;
        }
        ///--------------------------------------------------------------------------------------





         ///=====================================================================================
        ///
        /// <summary>
        /// активировать транспортируемый экран
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        public bool addScreen()
        {
            if (!mAddScreen)
            {
                mManager.addScreen(mScreen);
                mAddScreen = true;
                return true;
            }
            return false;
        }
        ///--------------------------------------------------------------------------------------






         ///=====================================================================================
        ///
        /// <summary>
        /// закрыть систему транзита между экранами
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        public void close()
        {
            addScreen();
            mManager.removeScreenFrame(this);
        }
        ///--------------------------------------------------------------------------------------







         ///=====================================================================================
        ///
        /// <summary>
        /// Обновление
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        public void update(TimeSpan gameTime)
        {
            onUpdate(gameTime);
            if (mManager != null)
            {
                mManager.devices.input.release();
            }
        }
        ///--------------------------------------------------------------------------------------






         ///=====================================================================================
        ///
        /// <summary>
        /// Обновление
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        protected virtual void onUpdate(TimeSpan gameTime)
        {

        }
        ///--------------------------------------------------------------------------------------






         ///=====================================================================================
        ///
        /// <summary>
        /// Отрисовка
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        public virtual void draw(ASpriteBatch spriteBatch)
        {
        }
        ///--------------------------------------------------------------------------------------






         ///=====================================================================================
        ///
        /// <summary>
        /// начали показ заставки
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        protected virtual void onStart(Vector2 touch)
        {
             

        }
        ///--------------------------------------------------------------------------------------





         ///=====================================================================================
        ///
        /// <summary>
        /// перезагрузка спрайтов
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        public virtual void spriteUnload(int hContent)
        {

        }
        ///--------------------------------------------------------------------------------------








        ///--------------------------------------------------------------------------------------




    }
}

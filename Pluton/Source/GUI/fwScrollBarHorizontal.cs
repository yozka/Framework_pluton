#region Using framework
using System;
using System.Collections.Generic;
using Microsoft.Xna.Framework;
using Microsoft.Xna.Framework.Graphics;
#endregion




#if RENDER_DEBUG
using System.Diagnostics;
#endif


namespace Pluton.GUI
{
    ///------------------------------------------------------------------------------------------
    using Pluton;
    using Pluton.SystemProgram;
    using Pluton.SystemProgram.Devices;
    using Pluton.GraphicsElement;
    ///------------------------------------------------------------------------------------------








    ///=========================================================================================
    ///
    /// <summary>
    /// полоска прокрутки
    /// 
    /// </summary>
    /// 
    ///------------------------------------------------------------------------------------------
    public class AScrollBarHorizontal 
        :
            AScrollBar
    {

        ///--------------------------------------------------------------------------------------
        ///--------------------------------------------------------------------------------------






         ///=====================================================================================
        ///
        /// <summary>
        /// Конструктор
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        public AScrollBarHorizontal()
        {

        }
        ///--------------------------------------------------------------------------------------







        ///=====================================================================================
        ///
        /// <summary>
        /// установим отступ и главного виджета
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        public override void onMargin(AScrollArea area)
        {

        }
        ///--------------------------------------------------------------------------------------





        ///=====================================================================================
        ///
        /// <summary>
        /// изменение позиции виджета скроллинга
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        public override void onPositionWidget(AScrollArea area)
        {

        }
        ///--------------------------------------------------------------------------------------












        ///=====================================================================================
        ///
        /// <summary>
        /// Отрисовка контрола с учетом располжения родителя
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        public override void onRender(AScrollArea area, ASpriteBatch spriteBatch)
        {


            //spriteBatch.Draw(spriteBatch.getSprite(sprite.gui_scroll_horizontal_margin), new Rectangle(iRightIcon, rect.Top, 16, rect.Height), Color.White);
            //


            //spriteBatch.primitives.drawBorder(rect, 2, Color.Red);

        }
        ///--------------------------------------------------------------------------------------










        ///=====================================================================================
        ///
        /// <summary>
        /// обработка нажатий, если обработка удачная то возвращаем true
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        /*
        public override bool onHandleInput(AInputDevice input)
        {
            
        }*/
        ///--------------------------------------------------------------------------------------




        ///=====================================================================================
        ///
        /// <summary>
        /// Обновление логики у контрола
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        /*
        public override void onUpdate(TimeSpan gameTime)
        {
            
        }*/
        ///--------------------------------------------------------------------------------------





        ///=====================================================================================
        ///
        /// <summary>
        /// скроллированние данных
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        /*
        private void scrolling(Point ptDiff)
        {
            
        }*/
        ///--------------------------------------------------------------------------------------






        ///=====================================================================================
        ///
        /// <summary>
        /// скроллированние данных
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        /*
        private void clipping()
        {
         

        }*/
        ///--------------------------------------------------------------------------------------







        ///=====================================================================================
        ///
        /// <summary>
        /// изменение размеров одного элемента
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        /*
        protected virtual void onUpdatePositionItem(Rectangle rectItem, int index)
        {

        }*/
        ///--------------------------------------------------------------------------------------







        ///=====================================================================================
        ///
        /// <summary>
        /// пересборка
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        /*
        protected void refresh()
        {
           
        }*/
        ///--------------------------------------------------------------------------------------








        ///=====================================================================================
        ///
        /// <summary>
        /// скроллируем в центр с указанным индексом
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        /*
        protected void scrollCenter(int index)
        {
     
        }*/
        ///--------------------------------------------------------------------------------------





        ///=====================================================================================
        ///
        /// <summary>
        /// покажем текущий индекс который находится на экране
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        /*
        protected void visibleIndex(ref int indexBegin, ref int indexEnd)
        {
           
        }*/
        ///--------------------------------------------------------------------------------------






        ///=====================================================================================
        ///
        /// <summary>
        /// скроллируем в центр с указанным индексом
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        /*
        protected void scrollCenterMove(int index)
        {

        }*/
        ///--------------------------------------------------------------------------------------








    }
}

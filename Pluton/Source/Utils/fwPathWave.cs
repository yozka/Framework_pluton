#region Using framework
using System;
using Microsoft.Xna.Framework;
#endregion


namespace Pluton.Path
{
    ///------------------------------------------------------------------------------------------
    using Pluton.Collections;
    ///------------------------------------------------------------------------------------------








     ///=========================================================================================
    ///
    /// <summary>
    /// Система поиска 
    /// </summary>
    /// 
    ///------------------------------------------------------------------------------------------
    public class APathWave
    {

        ///--------------------------------------------------------------------------------------
        private int     mWidth = 0;
        private int     mHeight = 0;
        private int[]   mCell = null;

        private ACollectionConstLength<TNode> mNodes = new ACollectionConstLength<TNode>(100);
        ///--------------------------------------------------------------------------------------




        private class TNode : AElementConstLength
        {
            public int x;
            public int y;
            public int id;
        }






         ///=====================================================================================
        ///
        /// <summary>
        /// Конструктор
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        public APathWave()
        {

        }
        ///--------------------------------------------------------------------------------------





         ///=====================================================================================
        ///
        /// <summary>
        /// создание массива
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        public void create(int width, int height)
        {
            mWidth = width;
            mHeight = height;
            int count = mWidth * mHeight;
            if (mCell == null || mCell.Length < count)
            {
                mCell = new int[count];
            }
            for (int i = 0; i < count; i++)
            {
                mCell[i] = 0;
            }
            
        }
        ///--------------------------------------------------------------------------------------






         ///=====================================================================================
        ///
        /// <summary>
        /// устанавливаем стенку
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        public void setWall(int x, int y, bool wall)
        {
            mCell[x + y * mWidth] = wall ? -1 : 0;
        }
        ///--------------------------------------------------------------------------------------





         ///=====================================================================================
        ///
        /// <summary>
        /// устанавливаем стенку
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        public void setWall(Point ptCell, bool wall)
        {
            setWall(ptCell.X, ptCell.Y, wall);
        }
        ///--------------------------------------------------------------------------------------






         ///=====================================================================================
        ///
        /// <summary>
        /// проверка, в данной координате проложен путь или нет
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        public bool isPath(int x, int y)
        {
            return mCell[x + y * mWidth] > 0 ? true : false;
        }
        ///--------------------------------------------------------------------------------------






         ///=====================================================================================
        ///
        /// <summary>
        /// проверка, в данной координате проложен путь или нет
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        public bool isPath(Point ptCell)
        {
            return isPath(ptCell.X, ptCell.Y);
        }
        ///--------------------------------------------------------------------------------------






         ///=====================================================================================
        ///
        /// <summary>
        /// следующий путь
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        public Point nextPath(Point ptCell)
        {
            int x = ptCell.X;
            int y = ptCell.Y;
            int id = mCell[x + y * mWidth];
            if (id > 1)
            {
                int i = getCell(x + 1, y);
                if (i > 0 && i < id)
                {
                    id = i;
                    ptCell.X = x + 1;
                }

                i = getCell(x - 1, y);
                if (i > 0 && i < id)
                {
                    id = i;
                    ptCell.X = x - 1;
                }

                i = getCell(x, y + 1);
                if (i > 0 && i < id)
                {
                    id = i;
                    ptCell.Y = y + 1;
                }


                i = getCell(x, y - 1);
                if (i > 0 && i < id)
                {
                    id = i;
                    ptCell.Y = y - 1;
                }

            }

            return ptCell;
        }
        ///--------------------------------------------------------------------------------------




       
        
         ///=====================================================================================
        ///
        /// <summary>
        /// индекс
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        private int getCell(int x, int y)
        {
            if (x >= 0 && x < mWidth && y >= 0 && y < mHeight)
            {
                return mCell[x + y * mWidth];
            }
            return -1;
        }
        ///--------------------------------------------------------------------------------------






      



         ///=====================================================================================
        ///
        /// <summary>
        /// постройка пути
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        public void startWave(Point ptCell)
        {
            startWave(ptCell.X, ptCell.Y);
        }
        ///--------------------------------------------------------------------------------------





         ///=====================================================================================
        ///
        /// <summary>
        /// постройка пути
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        public void startWave(int startX, int startY)
        {
            mNodes.clear();
            TNode node = mNodes.getNew();
            node.id = 1;
            node.x = startX;
            node.y = startY;
            mCell[startX + startY * mWidth] = 1;
            //

            while (mNodes.count > 0)
            {
                TNode nd = mNodes[0];
                int x = nd.x;
                int y = nd.y;
                int id = nd.id + 1;
                mNodes.remove(nd);

                makeNode(x + 1, y, id);
                makeNode(x - 1, y, id);
                makeNode(x, y + 1, id);
                makeNode(x, y - 1, id);
            }
        }
        ///--------------------------------------------------------------------------------------





        
         ///=====================================================================================
        ///
        /// <summary>
        /// постройка пути
        /// </summary>
        /// 
        ///--------------------------------------------------------------------------------------
        private void makeNode(int x, int y, int id)
        {
            if (x >= 0 && x < mWidth && y >= 0 && y < mHeight)
            {
                int index = x + y * mWidth;
                if (mCell[index] == 0)
                {
                    var nd = mNodes.getNew();
                    nd.x = x;
                    nd.y = y;
                    nd.id = id;
                    mCell[index] = id;
                }
            }

        }
        ///--------------------------------------------------------------------------------------















    }
}
